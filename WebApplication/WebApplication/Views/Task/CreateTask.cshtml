@model WebApplication.Models.CreateTaskModel

@{
    ViewBag.Title = "CreateTask";
}
<script async src="//code.jquery.com/ui/1.10.1/jquery-ui.min.js"></script>
<script src="~/Scripts/tiny/tinymce/tinymce.min.js"></script>
<script src="~/Scripts/dropZone.js"></script>
<link href="~/Content/style.css" rel="stylesheet" />
<h2>CreateTask</h2>
   @using (Html.BeginForm("CreateTask", "Task", FormMethod.Post,
    new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" })) 
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>CreateTaskModel</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Complexity, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Complexity)
                    @Html.ValidationMessageFor(model => model.Complexity)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, new { @class = "control-label col-md-2" })
                <div class="col-md-10 dropdown">
                    @Html.DropDownListFor(model => model.Category,
                 new List<SelectListItem> {
                       new SelectListItem { Value = "python" , Text = "python" },
                       new SelectListItem { Value = "java" , Text = "java" },
                       new SelectListItem { Value = "c#" , Text = "c#" },
                       new SelectListItem { Value = "ruby" , Text = "ruby" }
                    }, new { @class = "btn btn-default dropdown-toggle" })
                    @Html.ValidationMessageFor(model => model.Category)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Tag, new { @class = "control-label col-md-2" })
                <div id="Tags" class="col-md-10">
                    <a id="addTag" class="col-md-offset-3 col-md-5">
                        <i class="glyphicon glyphicon-plus-sign"></i>
                    </a>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Answers, new { @class = "control-label col-md-2" })
                <div id="Answers" class="col-md-10">
                    <a id="addAnswer" class="col-md-offset-3 col-md-5">
                        <i class="glyphicon glyphicon-plus-sign"></i>
                    </a>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Condition)
                    @Html.ValidationMessageFor(model => model.Condition)
                </div>
            </div>

            <input name="file" class="form-control" type="file" title="Добавить" data-filename-placement="inside" />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        </div>
    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            $(function () {
                var answer = -1;
                $('#addAnswer').click(function () {
                    answer++;
                    var formGroup = document.createElement("div");
                    formGroup.className = "form-group";
                    formGroup.id = "form-group-" + answer;
                    var label = document.createElement("label");
                    label.className = "control-label";
                    label.htmlFor = "Answers";
                    formGroup.appendChild(label);
                    var colmd = document.createElement("div");
                    colmd.className = "col-md-10";
                    var input = document.createElement("input");
                    input.className = "text-box single-line";
                    input.id = "Answers_" + answer + "_";
                    input.name = "Answers[" + answer + "]";
                    input.type = "text";
                    colmd.appendChild(input);
                    formGroup.appendChild(colmd);
                    $('#Answers').append(formGroup);
                })
                var tag = -1;
                $('#addTag').click(function () {
                    tag++;
                    var formGroup = document.createElement("div");
                    formGroup.className = "form-group";
                    var label = document.createElement("label");
                    label.className = "control-label tags";
                    label.htmlFor = "Tag";
                    formGroup.appendChild(label);
                    var colmd = document.createElement("div");
                    colmd.className = "col-md-10";
                    var input = document.createElement("input");
                    input.className = "text-box single-line";
                    input.id = "tag";
                    input.name = "Tag[" + tag + "]";
                    input.type = "text";
                    colmd.appendChild(input);
                    formGroup.appendChild(colmd);
                    $('#Tags').append(formGroup);
                    $(input).autocomplete({
                        source: function (request, response) {
                            $.ajax({
                                url: '@Url.Action("GetTags","Tags")',
                                type: "Post",
                                data: "data="+request.term,
                                success: function (data) {
                                    data = data.split('#');
                                    console.log(data);
                                    response(data);
                                }
                            });
                        }
                    });
                }
                )
            })


        </script>
        <script type="text/javascript">
            tinymce.init({
                selector: "textarea",
                plugins: [
                    " lists image charmap  preview anchor",
                    "searchreplace  code ",
                    "insertdatetime table contextmenu paste"
                ],
                toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
            });
        </script>
    }
